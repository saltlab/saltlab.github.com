<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[SALT Lab]]></title>
  <link href="http://saltlab.github.com/atom.xml" rel="self"/>
  <link href="http://saltlab.github.com/"/>
  <updated>2013-04-30T13:56:17-07:00</updated>
  <id>http://saltlab.github.com/</id>
  <author>
    <name><![CDATA[SALT Lab]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ICWE'13]]></title>
    <link href="http://saltlab.github.com/blog/2013/04/30/recent-updates/"/>
    <updated>2013-04-30T13:43:00-07:00</updated>
    <id>http://saltlab.github.com/blog/2013/04/30/recent-updates</id>
    <content type="html"><![CDATA[<h2>Hidden-Web Induced by Client-Side Scripting: An Empirical Study</h2>

<blockquote><p>Abstract: Client-side JavaScript is increasingly used for enhancing web<br/>application functionality, interactivity, and responsiveness. Through the<br/>execution of JavaScript code in browsers, the DOM tree representing a<br/>webpage at runtime, can be incrementally updated without requiring a<br/>URL change. This dynamically updated content is hidden from general<br/>search engines. In this paper, we present the rst empirical study on measuring and characterizing the hidden-web induced as a result of client-side JavaScript execution. Our study reveals that this type of hidden-web<br/>content is prevalent in online web applications today: from the 500 websites we analyzed, 95% contain client-side hidden-web content; On those websites that contain client-side hidden-web content, (1) on average, 62%<br/>of the web states are hidden, (2) per hidden state, there is an average of<br/>19 kilobytes of data that is hidden from which 0.6 kilobytes contain textual content, (3) the DIV element is the most common clickable element<br/>used (61%) to initiate this type of hidden-web state transition, and (4)<br/>on average 25 minutes is required to dynamically crawl 50 DOM states.<br/>Further, our study indicates that there is a correlation between DOM<br/>tree size and hidden-web content, but no correlation exists between the<br/>amount of JavaScript code and client-side hidden-web.</p></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ICST'13]]></title>
    <link href="http://saltlab.github.com/blog/2013/01/04/icst13/"/>
    <updated>2013-01-04T17:42:00-08:00</updated>
    <id>http://saltlab.github.com/blog/2013/01/04/icst13</id>
    <content type="html"><![CDATA[<h2>Efficient JavaScript Mutation Testing</h2>

<p>Shabnam Mirshokraie, Ali Mesbah, and Karthik Pattabiraman (2013). Efficient JavaScript Mutation Testing. In Proceedings of the 6th IEEE International Conference on Software Testing, Verification and Validation, (ICST’13).</p>

<blockquote><p>Abstract: Mutation testing is an effective test adequacy assessment technique. However, it suffers from two main issues. First, there is a high computational cost in executing the test suite against a potentially large pool of generated mutants. Second, there is much effort involved in filtering out equivalent mutants, which are syntactically different but semantically identical to the original program. Prior work has mainly focused on detecting equivalent mutants after the mutation generation phase, which is computationally expensive and has limited efficiency. In this paper, we propose a technique that leverages static and dynamic program analysis to guide the mutation generation process a-priori towards parts of the code that are error-prone or likely to influence the program’s output. Further, we focus on the JAVASCRIPT language, and propose a set of mutation operators that are specific to web applications. We implement our approach in a tool called MUTANDIS. We empirically evaluate MUTANDIS on a number of web applications to assess the efficacy of the approach.</p></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress]]></title>
    <link href="http://saltlab.github.com/blog/2013/01/02/Octopress/"/>
    <updated>2013-01-02T06:29:00-08:00</updated>
    <id>http://saltlab.github.com/blog/2013/01/02/Octopress</id>
    <content type="html"><![CDATA[<p>SALT lab&#8217;s website is migrated to GitHub and is now based on Octopress!</p>
]]></content>
  </entry>
  
</feed>
